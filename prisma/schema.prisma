// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model analisisclinico {
  AnalisisID     Int                        @id @default(autoincrement())
  TipoAnalisis   String                     @db.VarChar(100)
  FechaSolicitud DateTime                   @db.Date
  FechaResultado DateTime?                  @db.Date
  Resultado      analisisclinico_Resultado? @default(Normal)
  InternacionID  Int?
  ConsultaID     Int?

  @@index([ConsultaID], map: "analisisclinico_ConsultaID")  
  @@index([InternacionID], map: "analisisclinico_InternacionID")
}

model bitacora {
  BitacoraID            Int       @id @default(autoincrement())
  FechaHora             DateTime? @default(now()) @db.Timestamp(0)
  UsuarioID             Int       @db.SmallInt
  TipoAccionBitacoraID  Int       @db.SmallInt
  tipoAccion             tipoaccionbitacora  @relation(fields: [TipoAccionBitacoraID], references: [TipoAccionBitacoraID])

  @@index([TipoAccionBitacoraID], map: "TipoAccionBitacoraID")
  @@index([UsuarioID], map: "bitacora_UsuarioID")
}

model cargo {
  CargoID Int         @id @default(autoincrement()) @db.SmallInt
  Cargo   cargo_Cargo @default(Enfermero)
}

model cirugia {
  CirugiaID        Int       @id @default(autoincrement())
  TipoDeCirugia    String    @db.VarChar(50)
  FechaHoraTermino DateTime? @db.Timestamp(0)
  Notas            String?   @db.Text
  ServicioID       Int

  @@index([ServicioID], map: "cirugia_ServicioID")
}

model cliente {
  ClienteID      Int     @id @default(autoincrement()) @db.SmallInt
  NombreCompleto String  @db.VarChar(60)
  Telefono       String  @db.VarChar(30)
  Direccion      String? @db.VarChar(100)
  Email          String  @unique(map: "UniqueClienteEmail") @db.VarChar(50)
  mascotas       mascota[] // Relaci贸n uno a muchos con mascota
  usuario        usuario?
}

model consultamedica {
  ConsultaID  Int     @id @default(autoincrement())
  Peso        Decimal @db.Decimal(6, 2)
  Temperatura Decimal @db.Decimal(6, 2)
  Diagnostico String  @db.Text
  Tratamiento String? @db.Text
  ServicioID  Int

  @@index([ServicioID], map: "consultamedica_ServicioID")
}

model detallerecibo {
  DetalleReciboID Int     @id @default(autoincrement())
  ReciboID        Int
  ServicioID      Int
  Cantidad        Int     @default(1)
  PrecioUnitario  Decimal @db.Decimal(6, 2)
  Subtotal        Decimal @db.Decimal(8, 2)

  @@index([ReciboID], map: "ReciboID")
  @@index([ServicioID], map: "detallerecibo_ServicioID")
}

model especie {
  EspecieID     Int    @id @default(autoincrement()) @db.SmallInt
  NombreEspecie String @unique(map: "NombreEspecie") @db.VarChar(20)
  razas         raza[] // Relaci贸n uno a muchos con raza
}

model internacion {
  InternacionID      Int       @id @default(autoincrement())
  MotivoPrincipal    String    @db.VarChar(200)
  PesoEntrada        Decimal   @db.Decimal(6, 2)
  TemperaturaEntrada Decimal   @db.Decimal(6, 2)
  PesoSalida         Decimal?  @db.Decimal(6, 2)
  TemperaturaSalida  Decimal?  @db.Decimal(6, 2)
  FechaHoraSalida    DateTime? @db.Timestamp()
  ServicioID         Int
  CirugiaID          Int?

  @@index([CirugiaID], map: "CirugiaID")
  @@index([ServicioID], map: "internacion_ServicioID")
}

model mascota {
  MascotaID           Int      @id @default(autoincrement()) @db.SmallInt
  Nombre              String   @db.VarChar(50)
  Sexo                String   @db.Char(1)
  FechaNacimiento     DateTime @db.Date
  Observaciones       String?  @db.VarChar(100)
  ClienteID           Int      @db.SmallInt
  cliente             cliente  @relation(fields: [ClienteID], references: [ClienteID]) // Relaci贸n con cliente
  RazaID              Int      @db.SmallInt
  registroDeVacunas   registrodevacunas[]

  @@index([ClienteID], map: "mascota_ClienteID")
  @@index([RazaID], map: "RazaID")
}

model peluqueria {
  PeluqueriaID Int     @id @default(autoincrement())
  TipoCorte    String  @db.VarChar(50)
  Lavado       Boolean
  ServicioID   Int

  @@index([ServicioID], map: "ServicioID")
}

model personal {
  PersonalID        Int      @id @default(autoincrement()) @db.SmallInt
  NombreCompleto    String   @db.VarChar(60)
  Telefono          String   @db.VarChar(30)
  Direccion         String   @db.VarChar(100)
  FechaContratacion DateTime @db.Date
  Activo            Boolean  @default(true)
  Email             String   @unique(map: "UniquePersonalEmail") @db.VarChar(50)
  CargoID           Int      @db.SmallInt
  ProfesionID       Int      @db.SmallInt
  servicios         servicio[] // Relaci贸n uno a muchos con servicio
  usuario           usuario?

  @@index([CargoID], map: "CargoID")
  @@index([ProfesionID], map: "ProfesionID")
}

model profesion {
  ProfesionID Int    @id @default(autoincrement()) @db.SmallInt
  Profesion   String @db.VarChar(30)
}

model raza {
  RazaID     Int    @id @default(autoincrement()) @db.SmallInt
  NombreRaza String @db.VarChar(50)
  EspecieID  Int    @db.SmallInt
  especie    especie @relation(fields: [EspecieID], references: [EspecieID])

  @@index([EspecieID], map: "EspecieID")
}

model receta {
  RecetaID      Int    @id @default(autoincrement())
  Medicamento   String @db.VarChar(100)
  Dosis         String @db.VarChar(50)
  Indicaciones  String @db.VarChar(200)
  InternacionID Int?
  ConsultaID    Int?

  @@index([ConsultaID], map: "ConsultaID")
  @@index([InternacionID], map: "InternacionID")
}

model recibo {
  ReciboID     Int      @id @default(autoincrement())
  FechaEmision DateTime @default(now()) @db.Timestamp(0)
  Total        Decimal  @db.Decimal(10, 2)
}

model registrodevacunas {
  RegistroID      Int      @id @default(autoincrement())
  FechaVacunacion DateTime @db.Date
  ProximaFecha    DateTime @db.Date
  VacunaID        Int      @db.SmallInt
  MascotaID       Int      @db.SmallInt
  vacuna          vacuna   @relation(fields: [VacunaID], references: [VacunaID])
  mascota         mascota  @relation(fields: [MascotaID], references: [MascotaID])

  @@index([MascotaID], map: "registrodevacunas_MascotaID")
  @@index([VacunaID], map: "VacunaID")
}

model reservacion {
  ReservacionID      Int                 @id @default(autoincrement())
  Motivo             String              @db.VarChar(80)
  FechaHoraReservada DateTime            @db.Timestamp(0)
  Estado             reservacion_Estado? @default(Pendiente)
  UsuarioID          Int                 @db.SmallInt

  @@index([UsuarioID], map: "UsuarioID")
}

model servicio {
  ServicioID      Int                   @id @default(autoincrement())
  TipoServicio    servicio_TipoServicio
  Estado          servicio_Estado?      @default(En_Proceso)
  FechaHoraInicio DateTime              @db.Timestamp(0)
  ReservacionID   Int?
  MascotaID       Int                   @db.SmallInt
  PersonalID      Int                   @db.SmallInt
  personal        personal              @relation(fields: [PersonalID], references: [PersonalID])

  @@index([MascotaID], map: "MascotaID")
  @@index([PersonalID], map: "servicio_PersonalID")
  @@index([ReservacionID], map: "ReservacionID")
}

model tipoaccionbitacora {
  TipoAccionBitacoraID  Int                       @id @default(autoincrement()) @db.SmallInt
  Accion                  tipoaccionbitacora_Accion
  bitacoras               bitacora[]
}

model usuario {
  UsuarioID   Int            @id @default(autoincrement()) @db.SmallInt
  Rol         usuario_Rol    @default(Veterinario)
  Estado      usuario_Estado @default(Activo)
  PasswrdHash String         @db.VarChar(256)
  CreatedAt   DateTime?      @default(now()) @db.Timestamp(0)
  UpdatedAt   DateTime?      @default(now()) @db.Timestamp(0)
  PersonalID  Int?           @db.SmallInt @unique
  personal    personal?      @relation(fields: [PersonalID], references: [PersonalID])
  ClienteID   Int?           @db.SmallInt @unique
  cliente     cliente?       @relation(fields: [ClienteID], references: [ClienteID])

  @@index([ClienteID], map: "ClienteID")
  @@index([PersonalID], map: "PersonalID")
}

model vacuna {
  VacunaID            Int          @id @default(autoincrement()) @db.SmallInt
  NombreVacuna        String       @db.VarChar(50)
  Descripcion         String       @db.VarChar(50)
  Laboratorio         String       @db.VarChar(50)
  Tipo                vacuna_Tipo? @default(Canina)
  EdadMinima          Int          @db.SmallInt
  registroDeVacunas   registrodevacunas[]
}

enum cargo_Cargo {
  Administrador
  Medico
  Laboratorista
  Enfermero
  Peluquero
  Practicante
}

enum servicio_TipoServicio {
  Consulta
  Peluqueria
  Internacion
  Cirugia
}

enum tipoaccionbitacora_Accion {
  Login
  Logout
  RegistroPersonal
  RegistroCliente
  RegistroMascota
  UpdatePersonal
  UpdateCliente
  UpdateMascota
  ListarPersonal
  ListarCliente
  ListarMascota
  Reservacion
}

enum usuario_Rol {
  Administrador
  Veterinario
  Cliente
}

enum servicio_Estado {
  En_Proceso @map("En Proceso")
  Completado
}

enum usuario_Estado {
  Activo
  Inactivo
}

enum reservacion_Estado {
  Pendiente
  Cancelada
  Realizada
}

enum analisisclinico_Resultado {
  Normal
  Bajo
  Elevado
  Bueno
  Critico
}

enum vacuna_Tipo {
  Canina
  Felina
  General
}
